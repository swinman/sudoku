%% blank
clear
X=[0 0 0  0 0 0  0 0 0;...
   0 0 0  0 0 0  0 0 0;...
   0 0 0  0 0 0  0 0 0;...
   
   0 0 0  0 0 0  0 0 0;...
   0 0 0  0 0 0  0 0 0;...
   0 0 0  0 0 0  0 0 0;...
   
   0 0 0  0 0 0  0 0 0;...
   0 0 0  0 0 0  0 0 0;...
   0 0 0  0 0 0  0 0 0];
 [X,P]=sudoku(X);

%% test 0 - works w/ 1 test
clear
X=[0 2 0  0 3 0  0 4 0;...
   6 0 0  0 0 0  0 0 3;...
   0 0 4  0 0 0  5 0 0;...

   0 0 0  8 0 6  0 0 0;...
   8 0 0  0 1 0  0 0 6;...
   0 0 0  7 0 5  0 0 0;...

   0 0 7  0 0 0  6 0 0;...
   4 0 0  0 0 0  0 0 8;...
   0 3 0  0 4 0  0 2 0];
[X,P]=sudoku(X);

%% test 1 - works w/ 2 tests 
% from http://www.forbeginners.info/sudoku-puzzles/
clear
X=[0 0 9  7 4 8  0 0 0;...
   7 0 0  0 0 0  0 0 0;...
   0 2 0  1 0 9  0 0 0;...

   0 0 7  0 0 0  2 4 0;...
   0 6 4  0 1 0  5 9 0;...
   0 9 8  0 0 0  3 0 0;...

   0 0 0  8 0 3  0 2 0;...
   0 0 0  0 0 0  0 0 6;...
   0 0 0  2 7 5  9 0 0];
[X,P]=sudoku(X);

%% test 2 - works w/ 1 test
clear
X=[0 0 0  3 0 8  0 7 0;...
   3 0 0  7 1 0  0 0 4;...
   6 0 0  0 4 0  0 0 0;...

   1 0 0  0 0 0  6 3 0;...
   2 0 6  0 0 0  5 0 8;...
   0 5 3  0 0 0  0 0 7;...

   0 0 0  0 8 0  0 0 1;...
   7 0 0  0 6 4  0 0 5;...
   0 1 0  2 0 7  0 0 0];
[X,P]=sudoku(X);

%% test 3 - 2 potential solutions, 1 complete, the incomplete doesn't work
clear
X=[2 0 0  0 1 0  0 5 0;...
   3 0 5  0 4 2  0 0 0;...
   0 1 8  0 0 9  0 0 2;...
   
   0 3 2  1 0 0  8 0 0;...
   0 0 1  0 2 0  3 0 0;...
   0 0 9  0 0 3  2 6 0;...
   
   1 0 0  7 0 0  9 8 0;...
   0 0 0  2 6 0  5 0 7;...
   0 6 0  0 8 0  0 0 3];
[X,P]=sudoku(X);

%% test 4 - works w/ 2 tests
clear
X=[5 0 0  9 0 7  4 0 3;...
   0 4 0  0 0 0  6 0 7;...
   8 0 0  0 0 2  0 1 0;...
   
   0 0 8  3 0 0  0 7 0;...
   0 0 0  0 7 0  0 0 0;...
   0 3 0  0 0 4  2 0 0;...
   
   0 8 0  2 0 0  0 0 1;...
   7 0 3  0 0 0  0 6 0;...
   6 0 1  7 0 3  0 0 5];
[X,P]=sudoku(X);

%% test 5 - works w/ 1 test
clear
X=[5 0 3  0 1 0  8 0 0;...
   1 0 0  0 0 5  0 0 0;...
   0 7 0  0 0 3  2 1 0;...
   
   0 0 7  0 0 0  0 5 0;...
   2 0 1  9 0 7  6 0 4;...
   0 3 0  0 0 0  7 0 0;...
   
   0 2 9  4 0 0  0 6 0;...
   0 0 0  3 0 0  0 0 7;...
   0 0 5  0 7 0  4 0 9];
[X,P]=sudoku(X);

%% test 6 - works w/ 1 test
clear
X=[0 0 0  0 0 2  7 0 0;...
   0 0 0  0 1 5  0 3 2;...
   4 0 0  0 8 0  1 6 0;...
   
   0 2 0  0 0 4  0 0 0;...
   7 5 0  0 2 0  0 4 9;...
   0 0 0  5 0 0  0 8 0;...
   
   0 4 3  0 9 0  0 0 6;...
   5 9 0  2 4 0  0 0 0;...
   0 0 8  1 0 0  0 0 0];
[X,P]=sudoku(X);

%% test 7 - 2 pot. sol., 1 comp., inc fails after 2 tests
clear
X=[2 0 0  0 8 0  0 7 6;...
   0 0 0  0 0 0  4 0 0;...
   0 0 0  2 0 0  5 0 8;...
   
   5 0 0  1 0 0  8 6 0;...
   0 0 7  6 0 9  3 0 0;...
   0 6 2  0 0 7  0 0 4;...
   
   3 0 6  0 0 1  0 0 0;...
   0 0 1  0 0 0  0 0 0;...
   8 5 0  0 6 0  0 0 3];
[X,P]=sudoku(X);

%% test 8 - works w/ 2 tests
clear
X=[0 5 0  3 0 0  2 0 0;...
   2 0 3  0 0 0  0 0 0;...
   0 4 0  0 2 0  3 8 0;...
   
   0 0 5  1 9 0  0 3 0;...
   6 0 0  7 0 5  0 0 1;...
   0 9 0  0 3 2  8 0 0;...
   
   0 2 7  0 6 0  0 4 0;...
   0 0 0  0 0 0  1 0 9;...
   0 0 9  0 0 8  0 2 0];
[X,P]=sudoku(X);

%% test 9 - works w/ 1 test
clear
X=[0 0 5  0 0 7  0 0 2;...
   2 0 4  0 0 0  9 0 0;...
   9 6 0  0 0 0  0 3 0;...
   
   0 0 0  7 6 0  0 0 0;...
   7 0 0  2 4 1  0 0 6;...
   0 0 0  0 5 9  0 0 0;...
   
   0 3 0  0 0 0  0 6 8;...
   0 0 7  0 0 0  2 0 9;...
   1 0 0  4 0 0  7 0 0];
[X,P]=sudoku(X);

%% test 10 - works w/ 1 test
clear
X=[0 0 0  0 1 5  0 7 4;...
   0 0 0  0 3 0  8 0 0;...
   0 8 7  0 0 0  5 0 1;...
   
   0 2 3  0 0 4  0 0 0;...
   0 1 0  0 7 0  0 2 0;...
   0 0 0  2 0 0  7 9 0;...
   
   8 0 6  0 0 0  2 4 0;...
   0 0 1  0 2 0  0 0 0;...
   2 3 0  6 4 0  0 0 0];
[X,P]=sudoku(X);

%% test a solution
X_real=X; P_real=P;
max_test=max(max(sum(P,3)));

tc=find(sum(P,3)==max_test);
r=rem(tc(1)-1,9)+1; c=fix((tc(1)-1)/9)+1;

x=find(P(r,c,:));
OK=ones(1,max_test);
CPLT=zeros(1,max_test);
XP=zeros(9,9,max_test);
for i=1:max_test
  X_test=X_real;
  X_test(r,c)=x(i);
  [X_test,P]=sudoku(X_test);
  OK(i)=check_ok(P);
  if sum(sum(X_test==0))==0, CPLT(i)=1; end
  XP(:,:,i)=X_test;
end


clc, fprintf('%0.0f Potential Solutions\n',sum(OK))
fprintf('%0.0f Total Complete Solutions\n',OK*CPLT')

solmat=find(OK);
for i=1:length(solmat)
  disp(XP(:,:,solmat(i)))
end

if length(solmat)==1
  X=XP(:,:,solmat);
	P=initialize(X);
end

%% displays in figure
figure1 = gcf;
hold off
set(figure1,'WindowStyle','docked')
axes1 = axes('Parent',figure1,...
  'YTick',[1 2 3 4 5 6 7 8],'YGrid','on','XTickLabel','',...
  'XTick',[1 2 3 4 5 6 7 8],'XGrid','on','YTickLabel','',...
  'LineWidth',2,'GridLineStyle','-','TickLength',[0 0]);
xlim(axes1,[0 9]); ylim(axes1,[0 9]); box(axes1,'on');
hold(axes1,'all');

plot([0 9],[3 3],'k',[0 9],[6 6],'k',...
  [3 3],[0 9],'k',[6 6],[0 9],'k','LineWidth',2)

for i=1:9
  for j=1:9
    text(i-.5,j-.5,int2str(X(i,j)),'HorizontalAlignment','center')
  end
end
